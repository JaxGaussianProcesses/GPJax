[tool.poetry]
name = "gpjax"
version = "0.7.1"
description = "Gaussian processes in JAX."
authors = [
  "Thomas Pinder <tompinder@live.co.uk>",
  "Daniel Dodd <daniel_dodd@icloud.com>",
]
license = "Apache-2.0"
readme = "README.md"
homepage = "https://github.com/JaxGaussianProcesses/GPJax"
repository = "https://github.com/JaxGaussianProcesses/GPJax"
include = ["LICENSE"]
documentation = "https://docs.jaxgaussianprocesses.com/"
keywords = ["gaussian-processes jax machine-learning bayesian"]
packages = [{ include = "gpjax" }]

[tool.poetry.dependencies]
python = ">=3.10,<3.12"
optax = "^0.1.4"
jaxtyping = "^0.2.15"
tqdm = "^4.65.0"
simple-pytree = "^0.1.7"
tensorflow-probability = "^0.19.0"
beartype = "^0.13.1"
jax = ">=0.4.10"
jaxlib = ">=0.4.10"
orbax-checkpoint = ">=0.2.3"
cola-ml = "^0.0.1"

[tool.poetry.group.test.dependencies]
pytest = "^7.2.2"
pytest-cov = "^4.0.0"
pytest-pretty = "^1.1.1"
pytest-xdist = "^3.2.1"
networkx = "^3.0"
coverage = "^7.2.2"
absolufy-imports = "^0.3.1"
xdoctest = "^1.1.1"
mktestdocs = "^0.2.1"


[tool.poetry.group.dev.dependencies]
black = "^23.1.0"
isort = "^5.12.0"
pylint = "^2.17.1"
nox = "^2022.11.21"
ruff = "^0.0.259"
flax = "^0.6.8"
pre-commit = "^3.2.2"
nbstripout = "^0.6.1"
pydocstyle = "^6.3.0"
codespell = "^2.2.4"
asv = "^0.6.0"
interrogate = "^1.5.0"


[tool.poetry.group.docs.dependencies]
linkify-it-py = "^2.0.0"
jinja2 = "^3.1.2"
matplotlib = "^3.7.1"
seaborn = "^0.12.2"
networkx = "^3.0"
jupytext = "^1.14.5"
ipython = "^8.11.0"
ipykernel = "^6.22.0"
watermark = "^2.3.1"
blackjax = "^0.9.6"
ipywidgets = "^8.0.5"
pandas = "^1.5.3"
geopandas = "^0.12.2"
scikit-learn = "^1.2.2"
flax = "^0.6.8"
xarray = "^2023.1"
pystac-client = "^0.6.1"
planetary-computer = "^1.0.0"
fsspec = "^2023.4.0"
aiohttp = "^3.8.4"
rioxarray = "^0.13"
mkdocs = "^1.4.2"
mkdocs-material = "^9.1.8"
pymdown-extensions = "^9.11"
mknotebooks = "^0.7.1"
pygments = "^2.15.1"
mkdocs-bibtex = "^2.8.16"
mkdocs-jupyter = "^0.24.1"
mdx-truly-sane-lists = "^1.3"
pytkdocs = "^0.16.1"
mkdocs-gen-files = "^0.5.0"
mkdocs-literate-nav = "^0.6.0"
mkdocs-git-authors-plugin = "^0.7.0"
mkdocstrings = { version = "^0.21.2", extras = ["python"] }
markdown-katex = "^202112.1034"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black] # https://black.readthedocs.io/en/stable/usage_and_configuration/the_basics.html#configuration-via-a-file
line-length = 88
target-version = ["py38"]

[tool.pytest.ini_options] # https://docs.pytest.org/en/latest/reference/reference.html#ini-options-ref
# addopts = "--color=yes --doctest-modules --exitfirst --failed-first --strict-config --strict-markers --typeguard-packages=my_package --verbosity=2 --junitxml=reports/pytest.xml"
filterwarnings = ["error", "ignore::DeprecationWarning"]
testpaths = ["gpjax", "tests"]
xfail_strict = true

[tool.ruff] # https://github.com/charliermarsh/ruff
fix = true
cache-dir = "~/.cache/ruff"
dummy-variable-rgx = "^_$"
exclude = ["docs/"]
ignore-init-module-imports = true
line-length = 88
select = [
  # pyflakes
  "F",
  # pycodestyle
  "E",
  "W",
  # flake8-2020
  "YTT",
  # flake8-bugbear
  "B",
  # flake8-quotes
  "Q",
  # pylint
  "PLE",
  "PLR",
  "PLW",
  # misc lints
  "PIE",
  # flake8-pyi
  "PYI",
  # tidy imports
  "TID",
  # implicit string concatenation
  "ISC",
]
ignore = [
  # space before : (needed for how black formats slicing)
  # "E203",  # not yet implemented
  # module level import not at top of file
  "E402",
  # do not assign a lambda expression, use a def
  "E731",
  "E501",
  "PGH001",
  "RET504",
  "S101",
  "F722",
  'PLR2004',
  "PLR0913",
]
unfixable = ["ERA001", "F401", "F841", "T201", "T203"]
src = ["gpjax", "tests"]
target-version = "py38"

[tool.ruff.pydocstyle]
convention = "numpy"

[tool.ruff.per-file-ignores]
"gpjax/__init__.py" = ['I', 'F401', 'E402', 'D104']
"gpjax/progress_bar.py" = ["TCH004"]
"gpjax/scan.py" = ["PLR0913"]
"gpjax/citation.py" = ["F811"]
"tests/test_base/test_module.py" = ["PLR0915"]
"tests/test_objectives.py" = ["PLR0913"]
"docs/examples/barycentres.py" = ["PLR0913"]


[tool.isort]
profile = "black"
combine_as_imports = true
force_sort_within_sections = true
force_grid_wrap = 2
skip = 'docs'

[tool.coverage.report] # https://coverage.readthedocs.io/en/latest/config.html#report
fail_under = 50
precision = 1
show_missing = true
skip_covered = true

[tool.coverage.run] # https://coverage.readthedocs.io/en/latest/config.html#run
branch = true
command_line = "--module pytest"
data_file = "reports/.coverage"
source = ["src"]

[tool.coverage.xml] # https://coverage.readthedocs.io/en/latest/config.html#xml
output = "reports/coverage.xml"

[tool.poetry-dynamic-versioning]
enable = true
vcs = "git"

[tool.poetry-dynamic-versioning.substitution]
files = ["gpjax/__init__.py"]

[tool.codespell]
ignore-words-list = "fro" # Frobenius

[tool.interrogate]
ignore-init-method = true
ignore-init-module = true
fail-under = 64
exclude = [
  "setup.py",
  "docs",
  "tests",
  "gpjax/__init__.py",
  "gpjax/citation.py",
]
verbose = 2
quiet = false
color = true
